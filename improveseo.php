<?php

/**
 * Plugin Name: ImproveSEO
 * Description: Creates a large number of pages/posts and customize them to rank in Google.
 * Author: Improve SEO Team
 * Version: 2.0.12
 * License: GPLv3
 * License URI: https://www.gnu.org/licenses/gpl-3.0.html
 * Text Domain: improve-seo
 * Domain Path: /languages
 */



if (!defined('ABSPATH')) exit; // Exit if accessed directly  

define("IMPROVESEO_VERSION", "2.0.12");
define('IMPROVESEO_ROOT', dirname(__FILE__));
define('IMPROVESEO_DIR', untrailingslashit(plugin_dir_url(__FILE__)));


define('IMPROVESEO_WT_PATH', untrailingslashit(plugin_dir_path(__FILE__)));
define('IMPROVESEO_WT_URL',  untrailingslashit(plugin_dir_url(__FILE__)));

load_plugin_textdomain('improve-seo', false, basename(dirname(__FILE__)) . '/languages/');

/* 
**========== Files Load =========== 
*/
if (file_exists(dirname(__FILE__) . '/includes/helpers.php')) include_once dirname(__FILE__) . '/includes/helpers.php';
// if( file_exists( dirname(__FILE__).'/includes/admin.php' )) include_once dirname(__FILE__).'/includes/admin.php';

include_once 'bootstrap.php';

register_activation_hook(__FILE__, 'improveseo_install');
register_activation_hook(__FILE__, 'improveseo_install_data');

// Features

register_deactivation_hook(__FILE__, 'improveseo_uninstall');

function improve_seo_enqueue_scripts($hook)
{
	global $wpdb;
	error_log("Hook: " . $hook);
	if ($hook !== 'improve-seo_page_improveseo_projects') {
		return;
	}


	$script_url = plugin_dir_url(__FILE__) . 'assets/js/improveSeo-inline.js';

	wp_enqueue_script('improveSeo-inline-script', $script_url, array('jquery'), time(), true);
	$projects = $wpdb->get_results("SELECT * FROM {$wpdb->prefix}improveseo_tasks ORDER BY id DESC");

	$post_preview = isset($_GET['post_preview']) && $_GET['post_preview'] == 'true';

	// Check if projects exist before accessing it
	if ($post_preview && !empty($projects) && isset($projects[0])) {
		$project_id = esc_attr($projects[0]->id);
	} else {
		$project_id = 1; // Default project ID
	}


	wp_localize_script('improveSeo-inline-script', 'improveSeoData', [
		'post_preview' => $post_preview,
		'project_id'   => $project_id,
		'admin_url' => admin_url(),
		'site_url' => site_url(),
	]);

	$improve_seo_inline_script_3 = "
        if (improveSeoData.post_preview && improveSeoData.project_id) {
            console.log('🚀 Running build_project automatically for preview:', improveSeoData.project_id);
            build_project(improveSeoData.project_id);
        }
    
        jQuery('.build-project').on('click', function(event) {
            event.preventDefault(); // Prevent default link behavior
            var projectId = jQuery(this).data('id');
            console.log('🔨 Building project:', projectId);
            build_project(projectId);
        });

        window.build_project = function(id) {
            console.log('🔨 Building project:', id);
            jQuery('.show_loading').css('display', 'block');
            jQuery('.show_loading h1').html('Building project.... in progress');
            start_build(id);
        };

        function start_build(ids) {
            console.log('⚙️ start_build() called for ID:', ids);
            var max_iterations = parseInt(jQuery('#max-iterations').val());
            var export_url = '" . (admin_url("admin.php?page=improveseo_projects&action=export_preview_url&id=")) . "';

            jQuery.ajax({
                url: '" . esc_url(admin_url("admin-ajax.php")) . "',
                data: { action: 'workdex_builder_ajax', page: 100, ajax: 1, id: ids },
                success: function(data) {
                    console.log('✅ AJAX Success:', data);
                    jQuery('.show_loading h1').html('Building project.... in progress');
                    jQuery('.show_loading h2').html('Posts generated by now ' + data);

                    var is_preview_available = jQuery('#is_preview_available').val();
                    if (max_iterations > 100) {
                        if (numm == data) {
                            jQuery('.show_loading').css('display', 'none');
                            if (is_preview_available == 'yes') {
                                window.location.href = export_url + ids + '&noheader=true';
                            }
                        } else {
                            numm = data;
                            setTimeout(() => start_build(ids), 100);
                        }
                        location.reload(true);
                    } else {
                    console.log(export_url);
                    console.log(export_url + ids);
                    console.log(export_url + ids + '&noheader=true')
                        if (is_preview_available == 'yes') {
                            jQuery('.show_loading h1').html('Exporting posts. Please wait');
                            jQuery('.show_loading h2').html('');
                            window.location.href = export_url + ids + '&noheader=true';
                        } else {
                            setTimeout(() => {
                                jQuery('.show_loading').css('display', 'none');
                                location.reload(true);
                            }, 100);
                        }
                    }
                },
                error: function(xhr, status, error) {
                    console.error('❌ AJAX Error:', error);
                }
            });
        }

        jQuery(document).ready(function() {
            console.log('📢 improveSeo script initialized');
        });
    ";

	wp_add_inline_script('improveSeo-inline-script', $improve_seo_inline_script_3);
}

add_action('admin_enqueue_scripts', 'improve_seo_enqueue_scripts');

function improveseo_load_media_files()
{
	wp_enqueue_media();
}
add_action('admin_enqueue_scripts', 'improveseo_load_media_files');

//add_action( 'init', "improveseo_workdex_init" );

add_filter('jpeg_quality', function ($arg) {
	return 75;
});


//adding buttons to content editor
add_action('media_buttons', 'improveseo_media_button');
function improveseo_media_button()
{

	if (function_exists('get_current_screen')) {
		$my_current_screen = get_current_screen();
		$allowed_bases = array('improve-seo_page_improveseo_posting');
		if (!in_array($my_current_screen->base, $allowed_bases)) {
			return;
		}
	}

	$html = '';
	$html .= '<select class="sw-editor-selector" style="text-align:left !important;">
                <option value="addshortcode">Add Shortcode</option>
                <option value="list">Lists</option>
             </select> &nbsp;';
	$saved_rnos =  get_option('improveseo_get_saved_random_numbers');

	if (!empty($saved_rnos)) {
		foreach ($saved_rnos as $id) {

			$testimonial = get_option('improveseo_get_testimonials_' . $id);
			if (!empty($testimonial)) {
				$display_name = $id;
				$data_name = '';
				if (isset($testimonial['tw_testi_shortcode_name']) && $testimonial['tw_testi_shortcode_name'] != "") {
					$data_name = $display_name = $testimonial['tw_testi_shortcode_name'];
				}
				$html .= '<button data-action="testimonial" data-name="' . esc_attr($data_name) . '" id="' . esc_attr($id) . '" class="sw-hide-btn button">Add Testimonial - ' . esc_html($display_name) . '</button>';
			}

			$buttons = get_option('improveseo_get_buttons_' . $id);
			if (!empty($buttons)) {
				$display_name = $id;
				$data_name = '';
				if (isset($buttons['tw_button_shortcode_name']) && $buttons['tw_button_shortcode_name'] != "") {
					$data_name = $display_name = $buttons['tw_button_shortcode_name'];
				}
				$html .= '<button data-action="button" data-name="' . esc_attr($data_name) . '" id="' . esc_attr($id) . '" class="sw-hide-btn button">Add Button - ' . esc_html($display_name) . '</button>';
			}

			$google_map = get_option('improveseo_get_googlemaps_' . $id);
			if (!empty($google_map)) {
				$display_name = $id;
				$data_name = '';
				if (isset($google_map['tw_maps_shortcode_name']) && $google_map['tw_maps_shortcode_name'] != "") {
					$data_name = $display_name = $google_map['tw_maps_shortcode_name'];
				}
				$html .= '<button data-action="googlemap" data-name="' . esc_attr($data_name) . '" id="' . esc_attr($id) . '" class="sw-hide-btn button">Add GoogleMap - ' . esc_html($display_name) . '</button>';
			}

			$videos = get_option('improveseo_get_videos_' . $id);
			if (!empty($videos)) {
				$display_name = $id;
				$data_name = '';
				if (isset($videos['video_shortcode_name']) && $videos['video_shortcode_name'] != "") {
					$data_name = $display_name = $videos['video_shortcode_name'];
				}
				$html .= '<button data-action="video" data-name="' . esc_attr($data_name) . '" id="' . esc_attr($id) . '" class="sw-hide-btn button">Add Video - ' . esc_html($display_name) . '</button>';
			}
		}
	}

	$seo_list = improveseo_lits();
	if (!empty($seo_list)) {
		foreach ($seo_list as $li) {
			$html .= '<button data-action="list" class="sw-hide-btn add-seolistshortcode button" id="' . esc_attr($li) . '">@list:' . esc_html($li) . '</button>';
		}
	}

	$allowed_html = array(
		'select' => array(   // Allow <select> tag with these attributes
			'class' => true,
			'style' => true,
		),
		'option' => array(   // Allow <option> tag with these attributes
			'value' => true,
		),
		'button' => array(   // Allow <button> tag with these attributes
			'data-action' => true,
			'data-name' => true,
			'id' => true,
			'class' => true,
		),
	);

	echo wp_kses($html, $allowed_html);
}

function improveseo_lits()
{

	global $wpdb;
	$list_names = array();
	$sql = "SELECT * FROM " . $wpdb->prefix . "improveseo_lists ORDER BY name ASC";
	$lists = $wpdb->get_results($wpdb->prepare($sql));
	foreach ($lists as $li) {
		$list_names[] = $li->name;;
	}
	return $list_names;
}

add_action('init', 'improveseo_updating_post_status_to_publish');
function improveseo_updating_post_status_to_publish()
{

	// improveseo_project_id
	wp_enqueue_style('tmm_stlye_css', IMPROVESEO_WT_URL . "/assets/css/wt-style.css",  true);
	$args = array(
		'post_status' => array('future')
	);
	$query = new WP_Query($args);
	$all_posts = $query->posts;

	$post_data = array();
	foreach ($all_posts as $key => $value) {

		$post_data[] = array(
			'post_id'   => $value->ID,
			'post_date' => $value->post_date,
		);
	}

	foreach ($post_data as $i => $v) {

		$post_id = $v['post_id'];
		$post_date = $v['post_date'];
		$post_status = get_post_status($post_id);
		if ($post_status != 'future') {
			continue;
		}
		$date_now = new DateTime();
		$date_op    = new DateTime($post_date);

		if ($date_now > $date_op) {
			improveseo_change_post_status($post_id, $status = 'publish');
		}
	}
}

//change the post status
function improveseo_change_post_status($post_id, $status)
{
	$current_post = get_post($post_id, 'ARRAY_A');
	$current_post['post_status'] = $status;
	wp_update_post($current_post);
}


function improveseo_workdex_init()
{

	global $wpdb;
	$time = get_option("improveseo_work_dex_schedule");
	if ($time < (time() - 3600 * 12)) {
		$wpdb->query("UPDATE " . $wpdb->posts . " SET post_status='publish' WHERE post_date<=now() and post_date_gmt<=now()");
		update_option("improveseo_work_dex_schedule", time());
	}
}

add_action('wp_ajax_workdex_builder_ajax', 'improveseo_builder');
add_action('wp_ajax_workdex_builder_update_ajax', 'improveseo_builder_update');

//AJAX call to check if preview window is open 
add_action('wp_ajax_preview_delete_ajax', 'improveseo_preview_delete_ajax');


$debug = 0;



/**
 * Api handler
 */




/*check curl install or not*/
function improveseo_curl_installed()
{
	if (in_array('curl', get_loaded_extensions())) {
		return true;
	} else {
		return false;
	}
}
/*end*/

add_action('admin_enqueue_scripts', 'improveseo_hide_other_notices');
function improveseo_hide_other_notices()
{




	if (is_admin()) {

		$my_current_screen = get_current_screen();
		$improve_seo_pages = array(
			'toplevel_page_improveseo_dashboard',
			'improve-seo_page_improveseo_posting',
			'improve-seo_page_improveseo_projects',
			'improve-seo_page_improveseo_shortcodes',
			'improve-seo_page_improveseo_lists',
			'improve-seo_page_improveseo_settings',
			'improve-seo_page_improveseo_authors',
			'improve-seo_page_improveseo_keyword_generator',
			'improve-seo_page_improveseo_shortcode'
		);

		if (isset($my_current_screen->base)) {
			if (in_array($my_current_screen->base, $improve_seo_pages)) {
				$allowed_html = array(
					'style' => array(
						'type' => true,  // Allow the 'type' attribute
					),
				);

				echo wp_kses('<style>.notice{ display:none !important;}</style>', $allowed_html);
			}
		}
	}
}


class Improveseo_Testimonial
{

	function __construct()
	{

		//add_action( 'admin_menu', 'custom_address_option_on_settings_tab' );

		add_action('admin_bar_menu', [$this, 'improve_seo_admin_top_bar_option'], 2000);

		add_action('admin_enqueue_scripts', array($this, 'load_admin_files'), 30);

		add_action('wp_ajax_wt_save_form_fields_for_testimonials', array($this, 'wt_save_form_fields_for_testimonials'));
		add_action('wp_ajax_wt_save_form_fields_for_googlemaps', array($this, 'wt_save_form_fields_for_googlemaps'));
		add_action('wp_ajax_wt_save_form_fields_for_buttons', array($this, 'wt_save_form_fields_for_buttons'));
		add_action('wp_ajax_wt_save_form_fields_for_videos', array($this, 'wt_save_form_fields_for_videos'));

		add_action('wp_ajax_delete_selected_data', array($this, 'delete_selected_data'));
		add_action('wp_ajax_kwdelete_selected_data_for_keyword', array($this, 'kwdelete_selected_data_for_keyword'));
		add_action('wp_ajax_kwdownload_selected_data_for_keyword', array($this, 'kwdownload_selected_data_for_keyword'));


		add_action('wp_ajax_edit_selected_data', array($this, 'edit_selected_data'));
		add_action('wp_ajax_sw_saved_search_results_keyword', array($this, 'sw_saved_search_results_keyword'));

		//shortcode for things testimonials / MAPS / Buttons
		add_shortcode('improveseo_testimonial', array($this, 'testimonial_callback'));
		add_shortcode('improveseo_googlemaps', array($this, 'maps_callback'));
		add_shortcode('improveseo_buttons', array($this, 'button_callback'));
		add_shortcode('improveseo_video', array($this, 'video_callback'));
	}



	/**
	 * admin bar.
	 * @return void.
	 */
	public function improve_seo_admin_top_bar_option()
	{
		global $wp_admin_bar;
		$menu_id = 'improveseo_dashboard';
		$wp_admin_bar->add_menu(array(
			'id' => $menu_id,
			'title' => __('Improve SEO', 'improve-seo'),
			'href' => admin_url() . '/admin.php?page=improveseo_dashboard',
		));
	}

	/****=====Download the data against ID of keyword from admin side====***/
	function kwdownload_selected_data_for_keyword()
	{
		$keywordproj_id = isset($_REQUEST['kw_rand_id']) ? sanitize_text_field($_REQUEST['kw_rand_id']) : '';
		if (empty($keywordproj_id)) {
			return;
		}

		$keyword_data = get_option('improveseo_swsaved_keywords_with_results_' . $keywordproj_id);
		if (!$keyword_data) {
			return;
		}

		$proj_name      = sanitize_text_field($keyword_data['proj_name']);
		$proj_content   = wp_kses($keyword_data['search_results'], array());

		$proj_name =  str_replace(' ', '-', $proj_name);
		$args = array(
			'status'    => 'success',
			'proj_name' => $proj_name,
			'proj_content' => $proj_content,
		);
		wp_send_json($args);
		die(0);
	}

	function sw_saved_search_results_keyword()
	{
		$proj_name = isset($_REQUEST['proj_name']) ? sanitize_text_field($_REQUEST['proj_name']) : '';
		$search_results = isset($_REQUEST['search_results']) ? wp_kses($_REQUEST['search_results'], array()) : '';

		if (empty($proj_name) || empty($search_results)) {
			$args = array(
				'status' => 'error',
				'message' => 'Invalid input.',
			);
			wp_send_json($args);
			die(0);
		}

		$rand_no = $this->create_random_number();
		$save_keyword_data = array(
			'proj_name' => $proj_name,
			'search_results' => $search_results,
		);
		update_option('improveseo_swsaved_keywords_with_results_' . $rand_no, $save_keyword_data);

		$random_no_arr = get_option('improveseo_swsaved_random_nosofkeywords', array());
		$random_no_arr[] = $rand_no;
		$result = array_unique($random_no_arr);
		update_option('improveseo_swsaved_random_nosofkeywords', $result);

		$args = array(
			'status' => 'success',
		);
		wp_send_json($args);
		die(0);
	}


	/****=====Notice on how to use the shortcodes====***/
	function general_admin_notice()
	{

		echo wp_kses_post('<div class="notice notice-warning is-dismissible notice-improveseo">
            <p><b>1)</b>For Testimonials You can use the shortcode as <b>[improveseo_testimonial id="YOURID"]</b> 
            	You can Add multiple Ids for testimonials just like <b>[improveseo_testimonial id="YOURID_1 , YOURID_2 , YOURID_3"]</b><br><br>
            	<b>2)</b>For Buttons You can use the shortcode as <b>[improveseo_buttons id="YOURID"]</b> 
            	You can Add multiple Ids for buttons just like <b>[improveseo_buttons id="YOURID_1 , YOURID_2 , YOURID_3"]</b><br><br>
            	<b>3)</b>For Google Maps You can use the shortcode as <b>[improveseo_googlemaps id="YOURID" address="YOURADDRESS" title="YOURTITLE" ]</b>
            </p>
        </div>');
	}

	/****=====REndereing the Google Maps on front end against Shortcode====***/
	function maps_callback($atts)
	{


		$sc_att = shortcode_atts(
			array(
				'id' => null,
				'address' => null,
				'title' => null,
			),
			$atts
		);

		$id = $sc_att['id'];
		$id = $new_str = str_replace(' ', '', $id);

		$address = $sc_att['address'];
		$title = isset($sc_att['title']) ? $sc_att['title'] : '';

		if (empty($id || $address)) {
			return;
		}

		$id = explode(',', $id);
		$args = array(
			'id' => $id,
			'title' => $title,
			'address' => $address,
		);


		ob_start();
		improveseo_wt_load_templates('googlemaps.php', $args);
		$html = ob_get_contents();
		ob_end_clean();
		return $html;
	}

	/****=====getting the longitude and latitudepoints====***/
	function getDistance($addressFrom, $apiKey)
	{


		// Change address format
		$formattedAddrFrom    = str_replace(' ', '+', $addressFrom);

		// Geocoding API request with start address
		$geocodeFrom = file_get_contents('https://maps.googleapis.com/maps/api/geocode/json?address=' . $formattedAddrFrom . '&sensor=false&key=' . $apiKey);
		$outputFrom = json_decode($geocodeFrom);
		if (!empty($outputFrom->error_message)) {
			return $outputFrom->error_message;
		}


		// Get latitude and longitude from the geodata
		$latitudeFrom    = $outputFrom->results[0]->geometry->location->lat;
		$longitudeFrom    = $outputFrom->results[0]->geometry->location->lng;
		$resp = array(
			'latitude' => $latitudeFrom,
			'longitude' => $longitudeFrom,
		);
		return $resp;
	}

	/****=====REndereing the Buttons on front end against Shortcode====***/
	function button_callback($atts)
	{

		$sc_att = shortcode_atts(
			array(
				'id' => null,
			),
			$atts
		);

		$id = $sc_att['id'];
		$id = $new_str = str_replace(' ', '', $id);
		if (empty($id)) {
			return;
		}

		$id = explode(',', $id);
		$args = array(
			'id' => $id
		);


		ob_start();
		improveseo_wt_load_templates('buttons.php', $args);
		$html = ob_get_contents();
		ob_end_clean();
		return $html;
	}


	/****=====REndereing the Testimonial on front end against Shortcode====***/
	function testimonial_callback($atts)
	{

		$sc_att = shortcode_atts(
			array(
				'id' => null,
			),
			$atts
		);

		$id = $sc_att['id'];
		$id = $new_str = str_replace(' ', '', $id);
		if (empty($id)) {
			return;
		}

		$id = explode(',', $id);
		$args = array(
			'id' => $id
		);


		ob_start();
		improveseo_wt_load_templates('testimonials.php', $args);
		$html = ob_get_contents();
		ob_end_clean();
		return $html;
	}


	function video_callback($atts)
	{
		$sc_att = shortcode_atts(
			array(
				'id' => null,
			),
			$atts
		);

		$id = $sc_att['id'];
		$id = $new_str = str_replace(' ', '', $id);
		if (empty($id)) {
			return;
		}

		$id = explode(',', $id);
		$args = array(
			'id' => $id
		);


		ob_start();
		improveseo_wt_load_templates('videos.php', $args);
		$html = ob_get_contents();
		ob_end_clean();
		return $html;
	}


	/****=====Edit/Updating the selected data====***/
	function edit_selected_data()
	{
		$rand_id = isset($_REQUEST['rand_id']) ? filter_var($_REQUEST['rand_id'], FILTER_SANITIZE_NUMBER_INT) : '';
		$btn_action = isset($_REQUEST['btn_action']) ? wp_kses($_REQUEST['btn_action'], array()) : '';
		$page_url = isset($_REQUEST['page_url']) ? esc_url_raw(filter_var($_REQUEST['page_url'], FILTER_SANITIZE_URL)) : '';



		if (empty($rand_id) || empty($page_url)) {
			return;
		}

		$url_param = array(
			'rand_id' => $rand_id,
			'action' => $btn_action
		);
		$page_url = add_query_arg($url_param, $page_url);
		wp_send_json(array('status' => 'success', 'page_url' => $page_url));
	}

	function delete_selected_data()
	{
		$no_tobe_dlt = isset($_REQUEST['rand_id']) ? sanitize_text_field($_REQUEST['rand_id']) : '';
		if (empty($no_tobe_dlt)) {
			return;
		}

		$saved_random_nos = get_option('improveseo_get_saved_random_numbers', array());
		if (in_array($no_tobe_dlt, $saved_random_nos)) {
			delete_option('improveseo_get_testimonials_' . $no_tobe_dlt);
			$result = $this->delete_el_from_array($saved_random_nos, $no_tobe_dlt);
			update_option('improveseo_get_saved_random_numbers', $result);

			$url_param = array(
				'action' => 'deleted'
			);
			$url = admin_url('admin.php?page=improveseo_shortcodes');
			$page_url = add_query_arg($url_param, $url);

			wp_send_json(array('status' => 'success', 'url' => $page_url));
		}
	}

	/****=====Deleting the selected data for keyword on admin side====***/
	function kwdelete_selected_data_for_keyword()
	{
		$no_tobe_dlt = isset($_REQUEST['kw_rand_id']) ? sanitize_text_field($_REQUEST['kw_rand_id']) : '';
		if (empty($no_tobe_dlt)) {
			return;
		}

		$saved_random_nos = get_option('improveseo_swsaved_random_nosofkeywords', array());
		if (in_array($no_tobe_dlt, $saved_random_nos)) {
			delete_option('improveseo_swsaved_keywords_with_results_' . $no_tobe_dlt);
			$result = $this->delete_el_from_array($saved_random_nos, $no_tobe_dlt);
			update_option('improveseo_swsaved_random_nosofkeywords', $result);
			wp_send_json(array('status' => 'success'));
		}
	}

	/****=====Deleting Some element from Array====***/
	function delete_el_from_array($my_array, $remove_el)
	{

		$pos = array_search($remove_el, $my_array);

		unset($my_array[$pos]);
		return $my_array;
	}

	/****=====Load Admin JS And CSS files====***/
	function load_admin_files()
	{
		wp_enqueue_style('improveseo_style', IMPROVESEO_WT_URL . "/assets/css/improveseo_style.css",  array(), '1.1');
		wp_enqueue_style("poppins_fonts", "https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap");
		wp_enqueue_script('tmm_script_js', IMPROVESEO_WT_URL . "/assets/js/wt-script.js",  array('jquery'), IMPROVESEO_VERSION, true);
		wp_enqueue_script('tmm_sweeetalertscript_js', IMPROVESEO_WT_URL . "/assets/js/wt-sweetalert.js",  array('jquery'));

		wp_localize_script(
			'tmm_script_js',
			'ajax_vars',
			array(
				'ajax_url'      		=> 	admin_url('admin-ajax.php'),
			)
		);
	}

	/****=====Saving Form Fields From Admin Side For Button====***/ function wt_save_form_fields_for_buttons()
	{
		$rand_no = isset($_REQUEST['updateandedit_data']) ? sanitize_text_field($_REQUEST['updateandedit_data']) : '';

		// Sanitize other input fields
		$tw_button_shortcode_name = isset($_REQUEST['tw_button_shortcode_name']) ? sanitize_text_field($_REQUEST['tw_button_shortcode_name']) : '';
		$tw_btn_text = isset($_REQUEST['tw_btn_text']) ? sanitize_text_field($_REQUEST['tw_btn_text']) : '';
		$tw_btn_link = isset($_REQUEST['tw_btn_link']) ? esc_url_raw($_REQUEST['tw_btn_link']) : '';
		$tw_buttontxt_color = isset($_REQUEST['tw_buttontxt_color']) ? sanitize_hex_color($_REQUEST['tw_buttontxt_color']) : '';
		$tw_buttonbg_color = isset($_REQUEST['tw_buttonbg_color']) ? sanitize_hex_color($_REQUEST['tw_buttonbg_color']) : '';
		$tw_button_outline_color = isset($_REQUEST['tw_button_outline_color']) ? sanitize_hex_color($_REQUEST['tw_button_outline_color']) : '#ffffff';
		$tw_button_size = isset($_REQUEST['tw_button_size']) ? sanitize_text_field($_REQUEST['tw_button_size']) : 'sm';
		$tw_button_border_type = isset($_REQUEST['tw_button_border_type']) ? sanitize_text_field($_REQUEST['tw_button_border_type']) : 'square';

		$tw_button_type = isset($_REQUEST['tw_button_type']) ? sanitize_text_field($_REQUEST['tw_button_type']) : 'normal_btn';
		$tw_tap_to_call_img_source = isset($_REQUEST['tw_tap_to_call_img_source']) ? esc_url_raw($_REQUEST['tw_tap_to_call_img_source']) : '';
		$tw_tap_btn_text = isset($_REQUEST['tw_tap_btn_text']) ? sanitize_text_field($_REQUEST['tw_tap_btn_text']) : '';
		$tw_tap_btn_number = isset($_REQUEST['tw_tap_btn_number']) ? sanitize_text_field($_REQUEST['tw_tap_btn_number']) : '';

		$arr = array(
			'tw_button_shortcode_name'  => $tw_button_shortcode_name,
			'tw_btn_text'               => $tw_btn_text,
			'tw_btn_link'               => $tw_btn_link,
			'tw_buttontxt_color'        => $tw_buttontxt_color,
			'tw_buttonbg_color'         => $tw_buttonbg_color,
			'tw_button_outline_color'   => $tw_button_outline_color,
			'tw_button_size'            => $tw_button_size,
			'tw_button_border_type'     => $tw_button_border_type,
			'tw_button_type'            => $tw_button_type,
			'tw_tap_to_call_img_source' => $tw_tap_to_call_img_source,
			'tw_tap_btn_text'           => $tw_tap_btn_text,
			'tw_tap_btn_number'         => $tw_tap_btn_number,
		);

		if (empty($rand_no)) {
			$rand_no = $this->create_random_number();
		}
		update_option('improveseo_get_buttons_' . $rand_no, $arr);

		//saving random numbers too
		$random_no_arr = get_option('improveseo_get_saved_random_numbers');
		$random_no_arr[] = $rand_no;
		$result = array_unique($random_no_arr);
		update_option('improveseo_get_saved_random_numbers', $result);
		$url = admin_url('admin.php?page=improveseo_shortcodes');
		wp_send_json(array('status' => 'success', 'url' => $url));
		die;
	}

	function wt_save_form_fields_for_googlemaps()
	{
		$rand_no = isset($_REQUEST['updateandedit_data']) ? sanitize_text_field($_REQUEST['updateandedit_data']) : '';
		$tw_maps_apikey = isset($_REQUEST['tw_maps_apikey']) ? sanitize_text_field($_REQUEST['tw_maps_apikey']) : '';
		$tw_maps_shortcode_name = isset($_REQUEST['tw_maps_shortcode_name']) ? sanitize_text_field($_REQUEST['tw_maps_shortcode_name']) : '';

		$arr = array(
			'tw_maps_shortcode_name' => $tw_maps_shortcode_name,
			'tw_maps_apikey'  => $tw_maps_apikey,
		);

		if (empty($rand_no)) {
			$rand_no = $this->create_random_number();
		}
		update_option('improveseo_get_googlemaps_' . $rand_no, $arr);

		//saving random numbers too
		$random_no_arr = get_option('improveseo_get_saved_random_numbers');
		$random_no_arr[] = $rand_no;
		$result = array_unique($random_no_arr);
		update_option('improveseo_get_saved_random_numbers', $result);
		$url = admin_url('admin.php?page=improveseo_shortcodes');
		wp_send_json(array('status' => 'success', 'url' => $url));
		die;
	}

	function wt_save_form_fields_for_testimonials()
	{
		$rand_no = isset($_REQUEST['updateandedit_data']) ? sanitize_text_field($_REQUEST['updateandedit_data']) : '';

		// Sanitize other input fields
		$tw_testi_shortcode_name = isset($_REQUEST['tw_testi_shortcode_name']) ? sanitize_text_field($_REQUEST['tw_testi_shortcode_name']) : '';
		$testi_img_src = isset($_REQUEST['img_source']) ? esc_url_raw($_REQUEST['img_source']) : '';
		$tw_testi_content = isset($_REQUEST['tw_testi_content']) ? sanitize_textarea_field($_REQUEST['tw_testi_content']) : '';
		$tw_testi_name = isset($_REQUEST['tw_testi_name']) ? sanitize_text_field($_REQUEST['tw_testi_name']) : '';
		$tw_testi_position = isset($_REQUEST['tw_testi_position']) ? sanitize_text_field($_REQUEST['tw_testi_position']) : '';
		$tw_box_color = isset($_REQUEST['tw_box_color']) ? sanitize_hex_color($_REQUEST['tw_box_color']) : '';
		$tw_font_color = isset($_REQUEST['tw_font_color']) ? sanitize_hex_color($_REQUEST['tw_font_color']) : '';
		$tw_testi_outline_color = isset($_REQUEST['tw_testi_outline_color']) ? sanitize_hex_color($_REQUEST['tw_testi_outline_color']) : '#000000';

		$arr = array(
			'tw_testi_shortcode_name' => $tw_testi_shortcode_name,
			'testi_img_src'  => $testi_img_src,
			'tw_testi_content'  => $tw_testi_content,
			'tw_testi_name'  => $tw_testi_name,
			'tw_testi_position' => $tw_testi_position,
			'tw_box_color'      => $tw_box_color,
			'tw_font_color'      => $tw_font_color,
			'tw_testi_outline_color' => $tw_testi_outline_color,
		);

		if (empty($rand_no)) {
			$rand_no = $this->create_random_number();
		}
		update_option('improveseo_get_testimonials_' . $rand_no, $arr);

		//saving random numbers too
		$random_no_arr = get_option('improveseo_get_saved_random_numbers');
		$random_no_arr[] = $rand_no;
		$result = array_unique($random_no_arr);
		update_option('improveseo_get_saved_random_numbers', $result);

		$url = admin_url('admin.php?page=improveseo_shortcodes');
		wp_send_json(array('status' => 'success', 'url' => $url));
		die;
	}

	/****=====Saving Form Fields From Admin Side For videos====***/
	function wt_save_form_fields_for_videos()
	{
		$rand_no = isset($_REQUEST['updateandedit_data']) ? sanitize_text_field($_REQUEST['updateandedit_data']) : '';

		// Sanitize and escape other input fields
		$video_shortcode_name = isset($_REQUEST['video_shortcode_name']) ? sanitize_text_field($_REQUEST['video_shortcode_name']) : '';
		$video_type = isset($_REQUEST['video_type']) ? sanitize_text_field($_REQUEST['video_type']) : 'upload_video';

		$video_poster_img_source = isset($_REQUEST['video_poster_img_source']) ? esc_url_raw($_REQUEST['video_poster_img_source']) : '';
		$video_poster_img_id = isset($_REQUEST['video_poster_img_id']) ? sanitize_text_field($_REQUEST['video_poster_img_id']) : '';

		$video_id_mp4 = isset($_REQUEST['video_id_mp4']) ? sanitize_text_field($_REQUEST['video_id_mp4']) : '';
		$video_url_mp4 = isset($_REQUEST['video_url_mp4']) ? esc_url_raw($_REQUEST['video_url_mp4']) : '';

		$video_id_ogv = isset($_REQUEST['video_id_ogv']) ? sanitize_text_field($_REQUEST['video_id_ogv']) : '';
		$video_url_ogv = isset($_REQUEST['video_url_ogv']) ? esc_url_raw($_REQUEST['video_url_ogv']) : '';

		$video_id_webm = isset($_REQUEST['video_id_webm']) ? sanitize_text_field($_REQUEST['video_id_webm']) : '';
		$video_url_webm = isset($_REQUEST['video_url_webm']) ? esc_url_raw($_REQUEST['video_url_webm']) : '';

		$video_url_vimeo = isset($_REQUEST['video_url_vimeo']) ? esc_url_raw($_REQUEST['video_url_vimeo']) : '';
		$video_url_youtube = isset($_REQUEST['video_url_youtube']) ? esc_url_raw($_REQUEST['video_url_youtube']) : '';

		$video_autoplay = isset($_REQUEST['video_autoplay']) ? sanitize_text_field($_REQUEST['video_autoplay']) : 'no';
		$video_muted = isset($_REQUEST['video_muted']) ? sanitize_text_field($_REQUEST['video_muted']) : 'no';
		$video_controls = isset($_REQUEST['video_controls']) ? sanitize_text_field($_REQUEST['video_controls']) : 'no';
		$video_loop = isset($_REQUEST['video_loop']) ? sanitize_text_field($_REQUEST['video_loop']) : 'no';
		$video_height = isset($_REQUEST['video_height']) ? sanitize_text_field($_REQUEST['video_height']) : 'auto';
		$video_width = isset($_REQUEST['video_width']) ? sanitize_text_field($_REQUEST['video_width']) : '100%';

		$arr = array(
			'video_shortcode_name'        => $video_shortcode_name,
			'video_type'                  => $video_type,
			'video_poster_img_source'     => $video_poster_img_source,
			'video_poster_img_id'         => $video_poster_img_id,
			'video_id_mp4'                => $video_id_mp4,
			'video_url_mp4'               => $video_url_mp4,
			'video_id_ogv'                => $video_id_ogv,
			'video_url_ogv'               => $video_url_ogv,
			'video_id_webm'               => $video_id_webm,
			'video_url_webm'              => $video_url_webm,
			'video_url_vimeo'             => $video_url_vimeo,
			'video_url_youtube'           => $video_url_youtube,
			'video_autoplay'              => $video_autoplay,
			'video_muted'                 => $video_muted,
			'video_controls'              => $video_controls,
			'video_loop'                  => $video_loop,
			'video_height'                => $video_height,
			'video_width'                 => $video_width,
		);

		if (empty($rand_no)) {
			$rand_no = $this->create_random_number();
		}
		update_option('improveseo_get_videos_' . $rand_no, $arr);

		//saving random numbers too
		$random_no_arr = get_option('improveseo_get_saved_random_numbers');

		$random_no_arr[] = $rand_no;
		$result = array_unique($random_no_arr);
		update_option('improveseo_get_saved_random_numbers', $result);

		$url = admin_url('admin.php?page=improveseo_shortcodes');
		wp_send_json(array('status' => 'success', 'url' => $url));
		die;
	}


	/****=====Creating The Random Number====***/
	function create_random_number()
	{

		$rand_no = wp_rand(1, 76000);
		$multi = wp_rand(4, 140);
		$plus = wp_rand(0, 140007);
		$final_no = ($rand_no * $multi) + $plus;
		return $final_no;
	}


	/****=======load files on frontend page======****/
	function load_script_style_files()
	{

		wp_enqueue_style('tmm_stlye_css', IMPROVESEO_WT_URL . "/css/wt-style.css",  true);
		wp_enqueue_script('tmm_script_js', IMPROVESEO_WT_URL . "/js/wt-script.js",  array('jquery'), IMPROVESEO_VERSION, true);

		//sweet alert
		wp_enqueue_script('tmm_sweetalerttt', IMPROVESEO_WT_URL . "/js/wt-sweetalert.js",  array('jquery'));
		wp_localize_script(
			'tmm_script_js',
			'ajax_vars',
			array(
				'ajax_url'      		=> 	admin_url('admin-ajax.php'),
			)
		);
	}
}
new Improveseo_Testimonial;

function improveseo_admin_enqueue_scripts($hook)
{
	// Enqueue the script
	wp_enqueue_script('improveseo-main-js', plugin_dir_url(__FILE__) . 'assets/js/main.js', array('jquery'), null, true);
	wp_enqueue_script('improveseo-category-js', plugin_dir_url(__FILE__) . 'assets/js/custom-category.js', array('jquery'), null, true);

	wp_localize_script('improveseo-category-js', 'ajax_object', array(
		'ajax_url' => admin_url('admin-ajax.php'),
	));
}
add_action('admin_enqueue_scripts', 'improveseo_admin_enqueue_scripts');


add_action('wp_ajax_add_category', 'ccp_add_category_ajax');
add_action('wp_ajax_nopriv_add_category', 'ccp_add_category_ajax');

function ccp_add_category_ajax()
{
	if (!isset($_POST['cat_name']) || empty($_POST['cat_name'])) {
		wp_send_json_error(['message' => 'Category name is required']);
	}

	$cat_name = sanitize_text_field($_POST['cat_name']);
	$cat_slug = sanitize_title($cat_name);

	$result = wp_insert_term($cat_name, 'category', ['slug' => $cat_slug]);

	if (is_wp_error($result)) {
		wp_send_json_error(['message' => $result->get_error_message()]);
	} else {
		wp_send_json_success([
			'id' => $result['term_id'],
			'name' => $cat_name
		]);
	}

	wp_die();
}
